version: '2.1'
services:
  mysql:
    container_name: mysql
    image: 'mysql:8'
    volumes:
      - './docker-data/mysql:/var/lib/mysql'
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
  process_data:
    container_name: process_data
    build: python-backend-src
    volumes:
      - './docker-data/models:/models'
    links:
      - 'mysql:mysql'
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_HOST
    profiles:
      - process_data
    depends_on:
      - mysql
    command: ['main.py', 'process_data']
  train_classifier:
    container_name: train_classifier
    build: python-backend-src
    volumes:
      - './docker-data/models:/models'
    links:
      - 'mysql:mysql'
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_HOST
      - MODEL_DIRPATH=/models
      - MODEL_NAME
    profiles:
      - train_classifier
    depends_on:
      - mysql
    command: ['main.py', 'train_classifier']
  flask_app:
    container_name: flask_app
    build: python-backend-src
    volumes:
      - './docker-data/models:/models'
      - './docker-data/react-build:/react-build'
    links:
      - 'mysql:mysql'
    ports:
      - '5000:5000'
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_HOST
      - MODEL_DIRPATH=/models
      - MODEL_NAME
      - SAMPLE_RATE
    depends_on:
        - mysql
    profiles:
      - launch_app
    command: ['main.py', 'launch_app']
  build_react:
    container_name: build_react
    build: react-frontend-src
    volumes:
      - './docker-data/react-build:/usr/app/build'
    profiles:
      - build_react